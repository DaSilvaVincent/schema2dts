{
  "openapi": "3.0.2",
  "info": {
    "version": "0.0.0",
    "title": "diagrams-api",
    "description": "The DiagRAMS API"
  },
  "servers": [
    {
      "url": "http://localhost:8000/v0"
    }
  ],
  "paths": {
    "/organisations/{organisationId}/anomalies/{anomalyId}": {
      "get": {
        "operationId": "getAnomaly",
        "summary": "Returns an anomaly.",
        "tags": ["anomalies"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/anomalyId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["anomaly"]
          }
        ],
        "responses": {
          "200": {
            "description": "The anomaly",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "anomalies": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "organisationId": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "status": "open",
                        "priority": "not_set",
                        "severity": "critical",
                        "archived": false,
                        "isRead": false
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z",
                      "archivedAt": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/AnomalyItem"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/factories/{factoryId}": {
      "get": {
        "operationId": "getFactory",
        "summary": "Returns a factory.",
        "tags": ["factories"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/factoryId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["factory"]
          }
        ],
        "responses": {
          "200": {
            "description": "The factory",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "factories": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "organisationId": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "externalId": "F-0001",
                        "name": "Minions Factory"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/FactoryItem"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/lines/{lineId}": {
      "get": {
        "operationId": "getLine",
        "summary": "Returns a line.",
        "tags": ["factories"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/lineId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["line"]
          }
        ],
        "responses": {
          "200": {
            "description": "The line",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "lines": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "name": "Minion Line",
                        "externalId": "LN-0001",
                        "factoryId": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/LineItem"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/machines/{machineId}": {
      "get": {
        "operationId": "getMachine",
        "summary": "Returns a machine.",
        "tags": ["factories"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/machineId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["machine"]
          }
        ],
        "responses": {
          "200": {
            "description": "The machine",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "machines": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "name": "Minion Spawner",
                        "externalId": "M-0001",
                        "factoryId": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      },
                      "powerState": "on",
                      "operatingState": "normal",
                      "healthState": "good",
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MachineItem"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "operationId": "getMySelf",
        "summary": "Redirect to the user profile.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": ["user"]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to the fully qualified profile path"
          }
        }
      }
    },
    "/openAPI": {
      "get": {
        "operationId": "getOpenAPI",
        "summary": "Get API documentation.",
        "tags": ["system"],
        "responses": {
          "200": {
            "description": "Provides the private Open API documentation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "bearerAuth": ["admin"]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ]
      }
    },
    "/organisations/{organisationId}": {
      "get": {
        "operationId": "getOrganisation",
        "summary": "Returns an organisation.",
        "tags": ["organisations"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["organisation"]
          }
        ],
        "responses": {
          "200": {
            "description": "The organisation",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "organisations": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "factoriesIds": ["fab1ab00-0000-0000-0000-000000000000"],
                      "data": {
                        "name": "DiagRAMS",
                        "locale": "fr-FR",
                        "timeZone": "Europe/Paris"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/OrganisationItem"
                }
              }
            }
          }
        }
      }
    },
    "/datasets/{mlProject}/prediction": {
      "get": {
        "operationId": "getPredictionDataset",
        "summary": "Returns a prediction dataset.",
        "tags": ["data"],
        "parameters": [
          {
            "$ref": "#/components/parameters/mlProject"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "basicAuth": ["admin"]
          }
        ],
        "responses": {
          "200": {
            "description": "The prediction dataset",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/sensors/{sensorId}": {
      "get": {
        "operationId": "getSensor",
        "summary": "Returns a sensor.",
        "tags": ["factories"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/sensorId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["sensor"]
          }
        ],
        "responses": {
          "200": {
            "description": "The sensor",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "sensors": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "name": "Minion Sensor",
                        "externalId": "S-0001",
                        "factoryId": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SensorItem"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/sources/{sourceId}": {
      "get": {
        "operationId": "getSource",
        "summary": "Returns a source.",
        "tags": ["data"],
        "parameters": [
          {
            "$ref": "#/components/parameters/organisationId"
          },
          {
            "$ref": "#/components/parameters/sourceId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["source"]
          }
        ],
        "responses": {
          "200": {
            "description": "The source",
            "content": {
              "application/json": {
                "example": {
                  "item": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                  "sources": {
                    "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0": {
                      "id": "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0",
                      "data": {
                        "name": "Minion Source",
                        "externalId": "S-0001"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SourceItem"
                }
              }
            }
          }
        }
      }
    },
    "/datasets/{mlProject}/learning": {
      "get": {
        "operationId": "getTrainingDataset",
        "summary": "Returns a training dataset.",
        "tags": ["data"],
        "parameters": [
          {
            "$ref": "#/components/parameters/mlProject"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "basicAuth": ["admin"]
          }
        ],
        "responses": {
          "200": {
            "description": "The training dataset",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "summary": "Returns an user.",
        "tags": ["users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "bearerAuth": ["user"]
          }
        ],
        "responses": {
          "200": {
            "description": "The user",
            "content": {
              "application/json": {
                "example": {
                  "item": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                  "users": {
                    "acdc41ce-acdc-41ce-acdc-41ceacdc41ce": {
                      "id": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                      "roles": ["user", "admin"],
                      "organisationsIds": [
                        "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      ],
                      "data": {
                        "email": "john.doe@diagrams-technologies.com",
                        "name": "John Doe",
                        "givenName": "John",
                        "familyName": "Doe",
                        "locale": "fr-FR",
                        "timeZone": "Europe/Paris"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putUser",
        "summary": "Upserts an user.",
        "tags": ["users"],
        "parameters": [
          {
            "$ref": "#/components/parameters/userId"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "requestBody": {
          "description": "The user to upsert",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                "roles": ["user", "admin"],
                "organisationsIds": ["abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"],
                "data": {
                  "email": "john.doe@diagrams-technologies.com",
                  "name": "John Doe",
                  "givenName": "John",
                  "familyName": "Doe",
                  "locale": "fr-FR",
                  "timeZone": "Europe/Paris"
                },
                "creation": "2020-01-01T00:00:00Z",
                "lastModification": "2020-01-01T00:00:00Z"
              },
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["user"]
          }
        ],
        "responses": {
          "201": {
            "description": "The upserted user",
            "content": {
              "application/json": {
                "example": {
                  "item": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                  "users": {
                    "acdc41ce-acdc-41ce-acdc-41ceacdc41ce": {
                      "id": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                      "roles": ["user", "admin"],
                      "organisationsIds": [
                        "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      ],
                      "data": {
                        "email": "john.doe@diagrams-technologies.com",
                        "name": "John Doe",
                        "givenName": "John",
                        "familyName": "Doe",
                        "locale": "fr-FR",
                        "timeZone": "Europe/Paris"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "postOAuth2Token",
        "summary": "Implements the [Token Endpoint](https://tools.ietf.org/html/rfc6749#section-3.2)\n as defined per the OAuth2 RFC.",
        "tags": ["oauth2"],
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully issued, see https://tools.ietf.org/html/rfc6749#section-5 .",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["access_token", "token_type"],
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "title": "token_type",
                      "description": "See https://tools.ietf.org/html/rfc6749#section-7.1",
                      "type": "string",
                      "enum": ["bearer", "mac"]
                    },
                    "expires_in": {
                      "description": "The lifetime in seconds of the access token",
                      "type": "number"
                    },
                    "refresh_token": {
                      "description": "See https://tools.ietf.org/html/rfc6749#section-6",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Access token error response, see https://tools.ietf.org/html/rfc6749#section-5.2",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["error"],
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "invalid_request",
                        "invalid_client",
                        "invalid_grant",
                        "unauthorized_client",
                        "unsupported_grant_type",
                        "invalid_scope"
                      ]
                    },
                    "error_description": {
                      "type": "string"
                    },
                    "error_uri": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": ["admin"]
          }
        ]
      }
    },
    "/oauth2/reset": {
      "post": {
        "operationId": "postPasswordChangeRequest",
        "summary": "Allow to request a password reset mail",
        "tags": ["oauth2"],
        "security": [
          {
            "basicAuth": ["admin"]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successfully queued"
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "postUser",
        "summary": "Create a new user.",
        "tags": ["users"],
        "requestBody": {
          "description": "The user to create and its childs",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                "roles": ["user", "admin"],
                "organisationsIds": ["abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"],
                "data": {
                  "email": "john.doe@diagrams-technologies.com",
                  "name": "John Doe",
                  "givenName": "John",
                  "familyName": "Doe",
                  "locale": "fr-FR",
                  "timeZone": "Europe/Paris"
                },
                "creation": "2020-01-01T00:00:00Z",
                "lastModification": "2020-01-01T00:00:00Z"
              },
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "example": {
                  "item": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                  "users": {
                    "acdc41ce-acdc-41ce-acdc-41ceacdc41ce": {
                      "id": "acdc41ce-acdc-41ce-acdc-41ceacdc41ce",
                      "roles": ["user", "admin"],
                      "organisationsIds": [
                        "abbacaca-b0b0-b0b0-b0b0-abbacacab0b0"
                      ],
                      "data": {
                        "email": "john.doe@diagrams-technologies.com",
                        "name": "John Doe",
                        "givenName": "John",
                        "familyName": "Doe",
                        "locale": "fr-FR",
                        "timeZone": "Europe/Paris"
                      },
                      "creation": "2020-01-01T00:00:00Z",
                      "lastModification": "2020-01-01T00:00:00Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ]
      }
    },
    "/data/{mlProject}/predictions": {
      "put": {
        "operationId": "putPredictionsData",
        "summary": "Store the prediction data.",
        "tags": ["data"],
        "parameters": [
          {
            "$ref": "#/components/parameters/mlProject"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "security": [
          {
            "basicAuth": ["admin"]
          }
        ],
        "requestBody": {
          "description": "The predictions result data",
          "required": true,
          "content": {
            "application/json": {
              "example": {},
              "schema": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "text/csv": {
              "example": "some,csv,data",
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The predictions were successfully recorded"
          }
        }
      }
    },
    "/oauth2/authorize": {
      "get": {
        "operationId": "getOAuth2Authorize",
        "summary": "Implements the [Authorization Endpoint](https://tools.ietf.org/html/rfc6749#section-3.1)\n as defined per the OAuth2 RFC.",
        "tags": ["oauth2"],
        "parameters": [
          {
            "$ref": "#/components/parameters/responseType"
          },
          {
            "$ref": "#/components/parameters/clientId"
          },
          {
            "$ref": "#/components/parameters/redirectURI"
          },
          {
            "$ref": "#/components/parameters/scope"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects the user to the authorization interface."
          }
        }
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "summary": "Checks API's availability.",
        "tags": ["system"],
        "responses": {
          "200": {
            "description": "Pong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "pong": {
                      "type": "string",
                      "enum": ["pong"]
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xSdkVersion"
          },
          {
            "$ref": "#/components/parameters/xApplicationVersion"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AnomalyData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["status", "archived", "priority", "severity"],
        "properties": {
          "assignedUser": {
            "$ref": "#/components/schemas/UUID"
          },
          "status": {
            "type": "string",
            "enum": ["open", "discarded", "assigned", "fixed", "closed"]
          },
          "archived": {
            "type": "boolean"
          },
          "priority": {
            "type": "string",
            "enum": ["not_set", "urgent", "important", "secondary"]
          },
          "severity": {
            "type": "string",
            "enum": [
              "not_set",
              "critical",
              "major",
              "moderate",
              "minor",
              "cosmetic"
            ]
          }
        }
      },
      "AnomalyModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "organisationId": {
            "$ref": "#/components/schemas/UUID"
          },
          "linesIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "machinesIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "sensorsIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "data": {
            "$ref": "#/components/schemas/AnomalyData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          },
          "archivedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "AnomalyModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/AnomalyModel"
          }
        }
      },
      "AnomalyItem": {
        "type": "object",
        "required": ["item", "anomalies"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "anomalies": {
            "$ref": "#/components/schemas/AnomalyModelHash"
          }
        }
      },
      "AnomaliesItems": {
        "type": "object",
        "required": ["items", "anomalies"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "anomalies": {
            "$ref": "#/components/schemas/AnomalyModelHash"
          }
        }
      },
      "FactoryData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "externalId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FactoryModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "organisationId": {
            "$ref": "#/components/schemas/UUID"
          },
          "data": {
            "$ref": "#/components/schemas/FactoryData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "FactoryModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/FactoryModel"
          }
        }
      },
      "FactoryItem": {
        "type": "object",
        "required": ["item", "factories"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "factories": {
            "$ref": "#/components/schemas/FactoryModelHash"
          }
        }
      },
      "FactoriesItems": {
        "type": "object",
        "required": ["items", "factories"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "factories": {
            "$ref": "#/components/schemas/FactoryModelHash"
          }
        }
      },
      "LineData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "factoryId", "machineId", "settings"],
        "properties": {
          "name": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "factoryId": {
            "$ref": "#/components/schemas/UUID"
          },
          "machinesIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "machinesTree": {
            "type": "object"
          }
        }
      },
      "LineModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "data": {
            "$ref": "#/components/schemas/LineData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "LineModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/LineModel"
          }
        }
      },
      "LineItem": {
        "type": "object",
        "required": ["item", "lines"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "lines": {
            "$ref": "#/components/schemas/LineModelHash"
          }
        }
      },
      "LinesItems": {
        "type": "object",
        "required": ["items", "lines"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "lines": {
            "$ref": "#/components/schemas/LineModelHash"
          }
        }
      },
      "MachineData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "factoryId"],
        "properties": {
          "name": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "factoryId": {
            "$ref": "#/components/schemas/UUID"
          }
        }
      },
      "MachineModel": {
        "type": "object",
        "required": ["data", "powerState", "operatingState", "healthState"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "data": {
            "$ref": "#/components/schemas/MachineData"
          },
          "powerState": {
            "type": "string",
            "enum": ["unknown", "on", "off"]
          },
          "operatingState": {
            "type": "string",
            "enum": ["unknown", "normal", "stopped", "idle"]
          },
          "healthState": {
            "type": "string",
            "enum": ["unknown", "good", "faulty", "erroring"]
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "MachineModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/MachineModel"
          }
        }
      },
      "MachineItem": {
        "type": "object",
        "required": ["item", "machines"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "machines": {
            "$ref": "#/components/schemas/MachineModelHash"
          }
        }
      },
      "MachinesItems": {
        "type": "object",
        "required": ["items", "machines"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "machines": {
            "$ref": "#/components/schemas/MachineModelHash"
          }
        }
      },
      "OrganisationData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "locale", "timeZone"],
        "properties": {
          "name": {
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          }
        }
      },
      "OrganisationModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "factoriesIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "data": {
            "$ref": "#/components/schemas/OrganisationData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "OrganisationModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/OrganisationModel"
          }
        }
      },
      "OrganisationItem": {
        "type": "object",
        "required": ["item", "organisations"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationModelHash"
          }
        }
      },
      "OrganisationsItems": {
        "type": "object",
        "required": ["items", "organisations"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationModelHash"
          }
        }
      },
      "SensorData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "factoryId", "machineId", "settings"],
        "properties": {
          "name": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "factoryId": {
            "$ref": "#/components/schemas/UUID"
          },
          "machineId": {
            "$ref": "#/components/schemas/UUID"
          },
          "settings": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["opc-ua"]
              },
              "uri": {
                "type": "string"
              }
            }
          }
        }
      },
      "SensorModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "data": {
            "$ref": "#/components/schemas/SensorData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "SensorModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/SensorModel"
          }
        }
      },
      "SensorItem": {
        "type": "object",
        "required": ["item", "sensors"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "sensors": {
            "$ref": "#/components/schemas/SensorModelHash"
          }
        }
      },
      "SensorsItems": {
        "type": "object",
        "required": ["items", "sensors"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "sensors": {
            "$ref": "#/components/schemas/SensorModelHash"
          }
        }
      },
      "SourceData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "settings"],
        "properties": {
          "name": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["opc-ua"]
              },
              "uri": {
                "type": "string"
              }
            }
          }
        }
      },
      "SourceModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "data": {
            "$ref": "#/components/schemas/SourceData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "SourceModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/SourceModel"
          }
        }
      },
      "SourceItem": {
        "type": "object",
        "required": ["item", "sources"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "sources": {
            "$ref": "#/components/schemas/SourceModelHash"
          }
        }
      },
      "SourcesItems": {
        "type": "object",
        "required": ["items", "sources"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "sources": {
            "$ref": "#/components/schemas/SourceModelHash"
          }
        }
      },
      "Locale": {
        "title": "Locale",
        "type": "string",
        "pattern": "^[a-z]{2}-[A-Z]{2,3}",
        "maxLength": 5
      },
      "TimeZone": {
        "title": "TimeZone",
        "type": "string",
        "pattern": "^[a-zA-Z]+/[a-zA-Z]+",
        "maxLength": 50
      },
      "UUID": {
        "type": "string",
        "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "maxLength": 36
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "Role": {
        "type": "string",
        "enum": ["admin", "user", "candidate"]
      },
      "UserData": {
        "type": "object",
        "additionalProperties": false,
        "required": ["email", "name", "locale", "timeZone"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+[0-9]+$"
          },
          "birthDay": {
            "type": "string",
            "format": "date"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          }
        }
      },
      "UserModel": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "password": {
            "type": "string"
          },
          "organisationsIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "data": {
            "$ref": "#/components/schemas/UserData"
          },
          "creation": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModification": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "UserModelHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/UserModel"
          }
        }
      },
      "UserItem": {
        "type": "object",
        "required": ["item", "users"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/UUID"
          },
          "users": {
            "$ref": "#/components/schemas/UserModelHash"
          }
        }
      },
      "UsersItems": {
        "type": "object",
        "required": ["items", "users"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUID"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "users": {
            "$ref": "#/components/schemas/UserModelHash"
          }
        }
      },
      "AuthorizationCodeRequestBody": {
        "type": "object",
        "description": "Authorization code grant, see https://tools.ietf.org/html/rfc6749#section-4.1",
        "required": ["grant_type"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["authorization_code"]
          },
          "code": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PasswordRequestBody": {
        "type": "object",
        "description": "Resource owner password credentials grant, see https://tools.ietf.org/html/rfc6749#section-4.3",
        "required": ["grant_type", "username", "password"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["password"]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "ClientCredentialsRequestBody": {
        "type": "object",
        "description": "Client credentials grant, see https://tools.ietf.org/html/rfc6749#section-4.4",
        "required": ["grant_type"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["client_credentials"]
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "RefreshTokenRequestBody": {
        "type": "object",
        "description": "Token refresh grant type, see https://tools.ietf.org/html/rfc6749#section-6 .",
        "required": ["grant_type", "refresh_token"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["refresh_token"]
          },
          "refresh_token": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "VerifyTokenRequestBody": {
        "type": "object",
        "description": "Custom token verify grant type.",
        "required": ["grant_type", "verify_token"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["verify_token"]
          },
          "verify_token": {
            "type": "string"
          }
        }
      },
      "PasswordChangeBody": {
        "type": "object",
        "description": "Password change grant type.",
        "required": ["grant_type", "token", "new_password"],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": ["password_change"]
          },
          "token": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        }
      },
      "TokenRequestBody": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PasswordRequestBody"
          },
          {
            "$ref": "#/components/schemas/AuthorizationCodeRequestBody"
          },
          {
            "$ref": "#/components/schemas/ClientCredentialsRequestBody"
          },
          {
            "$ref": "#/components/schemas/RefreshTokenRequestBody"
          },
          {
            "$ref": "#/components/schemas/VerifyTokenRequestBody"
          },
          {
            "$ref": "#/components/schemas/PasswordChangeBody"
          }
        ]
      },
      "UnusedSchema": {
        "type": "object",
        "description": "An unused schema.",
        "required": ["foo"],
        "properties": {
          "foo": {
            "type": "string"
          },
          "bar": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "anomalyId": {
        "in": "path",
        "name": "anomalyId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "factoryId": {
        "in": "path",
        "name": "factoryId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "lineId": {
        "in": "path",
        "name": "lineId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "machineId": {
        "in": "path",
        "name": "machineId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "organisationId": {
        "in": "path",
        "name": "organisationId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "sensorId": {
        "in": "path",
        "name": "sensorId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "sourceId": {
        "in": "path",
        "name": "sourceId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "mlProject": {
        "in": "path",
        "name": "mlProject",
        "required": true,
        "schema": {
          "type": "string",
          "enum": ["dalkia"]
        }
      },
      "userId": {
        "in": "path",
        "name": "userId",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UUID"
        }
      },
      "responseType": {
        "in": "query",
        "name": "response_type",
        "required": true,
        "schema": {
          "type": "string",
          "enum": ["code", "token"]
        }
      },
      "clientId": {
        "in": "query",
        "name": "client_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "redirectURI": {
        "in": "query",
        "name": "redirect_uri",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uri"
        }
      },
      "scope": {
        "in": "query",
        "name": "scope",
        "description": "See https://tools.ietf.org/html/rfc6749#section-3.3",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "in": "query",
        "name": "state",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "xSdkVersion": {
        "name": "X-SDK-Version",
        "in": "header",
        "required": false,
        "example": "1.1.2-beta.1",
        "schema": {
          "type": "string",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        }
      },
      "xApplicationVersion": {
        "name": "X-Application-Version",
        "in": "header",
        "required": false,
        "example": "1.1.2-beta.1",
        "schema": {
          "type": "string",
          "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "Bearer authentication with a user API token",
        "scheme": "bearer"
      },
      "basicAuth": {
        "description": "Basic authentication with APPLICATION_ID/APPLICATION_SECRET credentials",
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "tags": [
    {
      "name": "system"
    },
    {
      "name": "users"
    },
    {
      "name": "oauth2"
    },
    {
      "name": "organisations"
    },
    {
      "name": "factories"
    },
    {
      "name": "data"
    }
  ]
}
